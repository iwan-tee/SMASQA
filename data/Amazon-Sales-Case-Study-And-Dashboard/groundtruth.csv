"NL","SQL query"
"What is the count of distinct cities in the dataset?","select count(distinct(city)) from amazon_sales;"
"For each branch, what is the corresponding city?","select distinct city, branch from amazon_sales;"
"What is the count of distinct product lines in the dataset?","select count(distinct(product_line)) from amazon_sales;"
"Which payment method occurs most frequently?","select payment_method, count(*) as occurance from amazon_sales group by payment_method order by occurance desc;"
"Which product line has the highest sales?","select product_line, sum(quantity) as total_sales from amazon_sales group by product_line order by total_sales desc;"
"How much revenue is generated each month?","select month_name, sum(total) as monthly_revenue$ from amazon_sales group by month_name order by monthly_revenue$ desc;"
"In which month did the cost of goods sold reach its peak?","select month_name, sum(cogs) as cost_of_goods_sold from amazon_sales group by month_name order by cost_of_goods_sold desc;"
"Which product line generated the highest revenue?","select product_line, sum(total) as total_revenue$ from amazon_sales group by product_line order by total_revenue$ desc;"
"In which city was the highest revenue recorded?","select city, sum(total) as revenue$ from amazon_sales group by city order by revenue$ desc;"
"Which product line incurred the highest Value Added Tax?","select product_line, max(vat) highest_vat from amazon_sales group by product_line order by highest_vat desc;"
"For each product line, add a column indicating 'Good' if its sales are above average, otherwise 'Bad.'","select product_line, sum(total) as revenue, case when sum(total) > (select sum(total)/count(distinct(product_line)) from amazon_sales) then 'Good' else 'Bad' end performance from amazon_sales group by product_line;"
"Identify the branch that exceeded the average number of products sold.","select branch, sum(quantity) as product_sold from amazon_sales group by branch having product_sold > (select sum(quantity)/count(distinct branch) as avg_quantity from amazon_sales);"
"Which product line is most frequently associated with each gender?","with new as (select gender, product_line, count(*) as count from amazon_sales group by gender, product_line), max_count as (select max(count) from new group by gender) select * from new where count in (select * from max_count) limit 2;"
"Calculate the average rating for each product line.","select product_line, avg(rating) as avg_rating from amazon_sales group by product_line;"
"Count the sales occurrences for each time of day on every weekday.","select day_name, time_of_day, count(*) sales from amazon_sales group by day_name, time_of_day order by field(day_name, 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'), field(time_of_day, 'Morning', 'Afternoon', 'Evening');"
"Identify the customer type contributing the highest revenue.","select customer_type, sum(total) as revenue from amazon_sales group by customer_type order by revenue desc;"
"Determine the city with the highest VAT percentage.","select city, max(vat) as vat_percentage from amazon_sales group by city order by vat_percentage desc;"
"Identify the customer type with the highest VAT payments.","select customer_type, max(vat) as vat_percentage from amazon_sales group by customer_type order by vat_percentage desc;"
"What is the count of distinct customer types in the dataset?","select count(distinct(customer_type)) as count_distinct_customer_type from amazon_sales;"
"What is the count of distinct payment methods in the dataset?","select count(distinct(payment_method)) as count_distinct_payment from amazon_sales;"
"Which customer type occurs most frequently?","select customer_type, count(*) as count from amazon_sales group by customer_type order by count desc;"
"Identify the customer type with the highest purchase frequency.","select customer_type, sum(total) as purchase_frequency from amazon_sales group by customer_type order by purchase_frequency desc;"
"Determine the predominant gender among customers.","select gender, count(*) as count from amazon_sales group by gender order by count desc;"
"Examine the distribution of genders within each branch.","select branch, gender, count(*) as count from amazon_sales group by branch, gender order by branch, gender;"
"Identify the time of day when customers provide the most ratings.","select time_of_day, count(rating) as rating_count from amazon_sales group by time_of_day order by rating_count desc;"
"Determine the time of day with the highest customer ratings for each branch.","select branch, time_of_day, max(rating) highest_rating from amazon_sales group by branch, time_of_day having highest_rating = (select max(x.max) from (select branch, time_of_day, max(rating) max from amazon_sales group by branch, time_of_day) as x where x.branch= amazon_sales.branch) order by branch;"
"Identify the day of the week with the highest average ratings.","select day_name, avg(rating) as avg_rating from amazon_sales group by day_name order by avg_rating desc;"
"Determine the day of the week with the highest average ratings for each branch.","with avg_rating as (select branch, day_name, avg(rating) avg_rat from amazon_sales group by branch, day_name), max_rating as (select max(avg_rat) from avg_rating group by branch) select branch, day_name, avg_rat as highest_avg_rat from avg_rating where avg_rat in (select * from max_rating);"
